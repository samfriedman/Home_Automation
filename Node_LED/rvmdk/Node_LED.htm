<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\Node_LED.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\Node_LED.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Mon Sep 01 14:50:29 2014
<BR><P>
<H3>Maximum Stack Usage =         40 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; setup
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[6]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1a]">SSIDataPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">SSIDataPut</a><BR>
 <LI><a href="#[1e]">SSIDataGet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">SSIDataGet</a><BR>
 <LI><a href="#[a]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">GPIOPortBIntHandler</a> from node_led.o(.text) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 117 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">main</a> from node_led.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[25]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[24]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[26]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[27]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[28]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[29]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[2a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>GPIOPortBIntHandler</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, node_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPortBIntHandler &rArr; nRFDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFGetPayloadWidth
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFClearInterrupt
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>setup</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, node_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = setup
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>main</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, node_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = main &rArr; setup
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFPayloadReuseEnable
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFeatureSet
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDynPayloadEnable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataPut
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFConfig
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntEnable
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashUserGet
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[19]"></a>nRFSetAddressWidth</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[18]"></a>nRFPayloadReuseEnable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRFPayloadReuseEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>nRFFlushTX</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[1c]"></a>nRFFlushRX</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[e]"></a>nRFClearInterrupt</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRFClearInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortBIntHandler
</UL>

<P><STRONG><a name="[17]"></a>nRFDataPut</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nRFDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>nRFConfig</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>nRFFeatureSet</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRFFeatureSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>nRFSetPayloadWidth</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[f]"></a>nRFGetPayloadWidth</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRFGetPayloadWidth
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortBIntHandler
</UL>

<P><STRONG><a name="[20]"></a>nRFDataPutAck</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[15]"></a>nRFDynPayloadEnable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRFDynPayloadEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10]"></a>nRFDataGet</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, nrf24l01.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nRFDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortBIntHandler
</UL>

<P><STRONG><a name="[21]"></a>nRFSetAddress</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[22]"></a>nRFSetTXAddress</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[23]"></a>nRFStatusGet</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, nrf24l01.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>

<P><STRONG><a name="[9]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>FlashUserGet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, flash.o(i.FlashUserGet))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>GPIOIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortBIntHandler
</UL>

<P><STRONG><a name="[16]"></a>GPIOIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFStatusGet
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetTXAddress
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetAddress
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataPutAck
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetPayloadWidth
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFlushRX
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFlushTX
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetAddressWidth
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFPayloadReuseEnable
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFGetPayloadWidth
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFeatureSet
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDynPayloadEnable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataPut
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataGet
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFConfig
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFClearInterrupt
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortBIntHandler
</UL>

<P><STRONG><a name="[c]"></a>SSIBusy</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ssi.o(i.SSIBusy))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataPutAck
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetPayloadWidth
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFlushRX
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFlushTX
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetAddressWidth
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFPayloadReuseEnable
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFeatureSet
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDynPayloadEnable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataPut
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataGet
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFConfig
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFClearInterrupt
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortBIntHandler
</UL>

<P><STRONG><a name="[1e]"></a>SSIDataGet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ssi.o(i.SSIDataGet))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFStatusGet
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFGetPayloadWidth
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFClearInterrupt
</UL>

<P><STRONG><a name="[1d]"></a>SSIDataGetNonBlocking</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ssi.o(i.SSIDataGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFStatusGet
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFGetPayloadWidth
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFClearInterrupt
</UL>

<P><STRONG><a name="[1a]"></a>SSIDataPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ssi.o(i.SSIDataPut))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFStatusGet
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetTXAddress
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetAddress
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataPutAck
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetPayloadWidth
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFlushRX
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFlushTX
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFSetAddressWidth
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFPayloadReuseEnable
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFGetPayloadWidth
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFFeatureSet
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDynPayloadEnable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataPut
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFDataGet
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFConfig
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRFClearInterrupt
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
